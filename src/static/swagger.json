{
  "swagger": "2.0",
  "info": {
    "description": "Swagger API DOC",
    "version": "1.0.0",
    "title": "Crizscore API Documentation"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/api/register": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be register",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "summary": "Register User",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be register",
            "required": false,
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "summary": "Login User",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/api/players": {
      "get": {
        "tags": [
          "Player"
        ],
        "security": [
          {
            "Token": []
          }
        ],
        "summary": "Returns Player list",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/player": {
      "post": {
        "tags": [
          "Player"
        ],
        "summary": "Insert player in Database",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be register",
            "required": false,
            "schema": {
              "$ref": "#/definitions/playe"
            }
          }
        ],
        "security": [
          {
            "Token": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Player"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "query",
            "description": "Playerid to update record",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "name",
            "description": "Value to be update",
            "required": false,
            "schema": {
              "$ref": "#/definitions/playerPatch"
            }
          }
        ],
        "security": [
          {
            "Token": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Player"
        ],
        "summary": "Remove Player form Database",
        "parameters": [
          {
            "name": "playerId",
            "in": "query",
            "description": "Playerid to update record",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Token": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "integer"
        }
      }
    },
    "login": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
  "players": {
    "properties": {
      "age": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "playerId": {
        "type": "string"
      }
    }
  },
  "playerPatch": {
    "properties": {
      "age": {
        "type": "string"
      },
      "name": {
        "type": "string"
      }
    }
  },
  "schemes": [
    "http"
  ]
}
}
